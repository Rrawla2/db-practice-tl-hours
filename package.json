{
  "name": "db-practice-tl-hours",
  "version": "1.0.0",
  "description": "- [ ] Design the data model and use _knex migrations_ to create the database and tables needed to satisfy the following rules:   - [ ] a `user` can have multiple `posts`.   - [ ] a `post` belongs to only one `user`.   - [ ] a `post` can have multiple `likes` from multiple `users`.   - [ ] when adding `users` the client must provide a `username`.   - [ ] when adding a `post` the client must provide a `title` and a `post_content`.   - [ ] when adding a `post` the client must provide the `id` of an existing user as a `user_id`.   - [ ] when adding `likes` the client must provide a `user_id` and a `post_id` - [ ] Build an API with endpoints for:   - [ ] adding users.   - [ ] retrieving a list of users.   - [ ] adding posts.   - [ ] retrieving a list of posts. **The list of posts should include the user name**.   - [ ] adding likes.   - [ ] retrieving a list of likes for a specific post.",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "server": "nodemon index.js",
    "start": "node index.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Rrawla2/db-practice-tl-hours.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/Rrawla2/db-practice-tl-hours/issues"
  },
  "homepage": "https://github.com/Rrawla2/db-practice-tl-hours#readme",
  "dependencies": {
    "dotenv": "^8.2.0",
    "express": "^4.17.1",
    "helmet": "^3.22.0",
    "knex": "^0.21.0",
    "knex-cleaner": "^1.3.0",
    "nodemon": "^2.0.3",
    "sqlite3": "^4.1.1"
  }
}
